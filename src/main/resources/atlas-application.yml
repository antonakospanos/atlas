server:
  # Configuration of Spring Boot embedded Tomcat server (java -jar atlas.jar)
  servlet:
    contextPath: ''
  port: "${PORT:8443}"
  http:
    port: 8080
endpoints:
  jmx:
    domain: atlas
logging:
  config: 'classpath:atlas-logback.xml'
spring:
  jmx:
    default-domain: atlas
  data:
    rest:
      defaultMediaType: application/json
  jpa:
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update # none | create | update | validate | create-drop
    properties:
      net.sf.ehcache.configurationResourceName: atlas-ehcache.xml
      hibernate:
        default_schema: public
        generate_statistics: false
        show_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false
        cache:
          use_query_cache: true
          use_second_level_cache: true
          region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
  datasource:
    url: "${DB_URL:jdbc:postgresql://rdbms:5432/atlas}"
    username: "${DB_USERNAME:atlas}"
    password: "${DB_PASSWORD:atlas}"
    driver-class-name: org.postgresql.Driver
  flyway:
    # https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#data-migration-properties
    enabled: true
    sqlMigrationSuffix: .sql
    validate-on-migrate: false
    table: DB_MIGRATION_HISTORY
    baselineOnMigrate: true
    schemas: public
mqtt:
  broker:
    url: "tcp://broker:1883" # tcp://broker.hivemq.com:1883
    auth:
      username: atlas
      password: atlas #"d3d3LmludGVybmV0LW9mLXRoaW5ncy1hbnRvbmFrb3MtY2Fyb3V6b3Mtc3lzdGVtcy5jb20=" # "Base64(www.internet-of-things-antonakos-carouzos-systems.com)"
      hash-algorithm: null # "SHA-512"
      hash-salt: null #"d3d3LmludGVybmV0LW9mLXRoaW5ncy1hbnRvbmFrb3MtY2Fyb3V6b3Mtc3lzdGVtcy5jb20=" # "Base64(www.internet-of-things-antonakos-carouzos-systems.com)"
  client:
    id: "org.iotac.atlas"
  service:
    quality: 1 # 0,1 or 2
    retained: false
application:
  roles:
    admin:
      access-token: admin # Change in PRD with a UUID
  cron:
    actions:
      lookup-rate: 10000
    alerts:
      lookup-rate: 10000
